{"ast":null,"code":"var _jsxFileName = \"/Users/sharadpaudel/Documents/WEB DEVELOPMENT/REACT/emoji_interpreter/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { click } from '@testing-library/user-event/dist/click';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar userName = \"User\";\nvar colorOne = \"aliceblue\";\nvar colorTwo = \"red\";\nconst emojiDictionary = {\n  \"üòÇ\": \"laughing\",\n  \"üôÑ\": \"rolling eyes\",\n  \"üî•\": \"fire\",\n  \"üòç\": \"heart eyes\",\n  'üôÇ': \"smiling\",\n  'ü´£': 'shy',\n  'üò°': 'angry',\n  'ü´°': 'salute',\n  'ü§ó': 'hug',\n  'üòµ‚Äçüí´': 'confused',\n  'ü§í': 'fever',\n  'üíÄ': 'dead',\n  'üëΩ': 'alien',\n  \"üñïüèª\": \"middle finger\"\n};\nfunction App() {\n  _s();\n  const [meaning, setmeaning] = useState(\"\");\n  function inputHandler(event) {\n    // console.log(event.target.value);\n    var userInput = event.target.value;\n    var meaning = emojiDictionary[userInput];\n    if (meaning = emojiDictionary[userInput]) {\n      setmeaning(meaning);\n    }\n    if (meaning != emojiDictionary[userInput]) {\n      meaning = \"Not available in the database\";\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // Displaying username and welcoming user\n    _jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: colorOne\n        },\n        children: [\"Welcome \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: colorTwo\n          },\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a emoji\",\n        onChange: inputHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: meaning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"nn6bz3A0GZmaxZY6aiA9Iv0khj0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","click","useState","jsxDEV","_jsxDEV","userName","colorOne","colorTwo","emojiDictionary","App","_s","meaning","setmeaning","inputHandler","event","userInput","target","value","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["/Users/sharadpaudel/Documents/WEB DEVELOPMENT/REACT/emoji_interpreter/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { click } from '@testing-library/user-event/dist/click';\nimport { useState } from 'react';\n\nvar userName = \"User\";\nvar colorOne = \"aliceblue\";\nvar colorTwo= \"red\";\n\nconst emojiDictionary= {\n  \"üòÇ\": \"laughing\",\n  \"üôÑ\": \"rolling eyes\",\n  \"üî•\": \"fire\", \n \"üòç\" : \"heart eyes\",\n 'üôÇ': \"smiling\",\n 'ü´£':'shy',\n 'üò°':'angry',\n 'ü´°':'salute',\n 'ü§ó':'hug',\n 'üòµ‚Äçüí´':'confused',\n 'ü§í':'fever',\n 'üíÄ':'dead',\n 'üëΩ':'alien',\n \"üñïüèª\":\"middle finger\",\n};\nfunction App() {\n   \n  const[meaning, setmeaning] = useState(\"\");\n  \n  function inputHandler(event){\n    // console.log(event.target.value);\n    var userInput = event.target.value; \n    var meaning = emojiDictionary[userInput];\n  \n    if(meaning=emojiDictionary[userInput]){\n     setmeaning(meaning) \n    }\n\n  if(meaning != emojiDictionary[userInput])\n  {\n    meaning = \"Not available in the database\";\n  }\n  \n  }\n  \n  return (\n    // Displaying username and welcoming user\n    <div className=\"App\">\n      <h1 style={{color:colorOne}}>Welcome <span style={{color:colorTwo}}>{userName}</span></h1>\n      \n     <input type=\"text\" placeholder='Enter a emoji' onChange={inputHandler} />\n     <h2>{meaning}</h2>\n    </div>\n  );\n}\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,KAAK,QAAQ,wCAAwC;AAC9D,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,IAAIC,QAAQ,GAAG,MAAM;AACrB,IAAIC,QAAQ,GAAG,WAAW;AAC1B,IAAIC,QAAQ,GAAE,KAAK;AAEnB,MAAMC,eAAe,GAAE;EACrB,IAAI,EAAE,UAAU;EAChB,IAAI,EAAE,cAAc;EACpB,IAAI,EAAE,MAAM;EACb,IAAI,EAAG,YAAY;EACnB,IAAI,EAAE,SAAS;EACf,IAAI,EAAC,KAAK;EACV,IAAI,EAAC,OAAO;EACZ,IAAI,EAAC,QAAQ;EACb,IAAI,EAAC,KAAK;EACV,OAAO,EAAC,UAAU;EAClB,IAAI,EAAC,OAAO;EACZ,IAAI,EAAC,MAAM;EACX,IAAI,EAAC,OAAO;EACZ,MAAM,EAAC;AACR,CAAC;AACD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEzC,SAASW,YAAYA,CAACC,KAAK,EAAC;IAC1B;IACA,IAAIC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IAClC,IAAIN,OAAO,GAAGH,eAAe,CAACO,SAAS,CAAC;IAExC,IAAGJ,OAAO,GAACH,eAAe,CAACO,SAAS,CAAC,EAAC;MACrCH,UAAU,CAACD,OAAO,CAAC;IACpB;IAEF,IAAGA,OAAO,IAAIH,eAAe,CAACO,SAAS,CAAC,EACxC;MACEJ,OAAO,GAAG,+BAA+B;IAC3C;EAEA;EAEA;IAAA;IACE;IACAP,OAAA;MAAKc,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBf,OAAA;QAAIgB,KAAK,EAAE;UAACC,KAAK,EAACf;QAAQ,CAAE;QAAAa,QAAA,GAAC,UAAQ,eAAAf,OAAA;UAAMgB,KAAK,EAAE;YAACC,KAAK,EAACd;UAAQ,CAAE;UAAAY,QAAA,EAAEd;QAAQ;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE3FrB,OAAA;QAAOsB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,eAAe;QAACC,QAAQ,EAAEf;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzErB,OAAA;QAAAe,QAAA,EAAKR;MAAO;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;AAEV;AAACf,EAAA,CA7BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}